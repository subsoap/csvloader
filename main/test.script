local csvloader = require("imports.csvloader")
local files = require("imports.files")

local languages = {}
languages.en = "English"
languages.fr = "Français / French"
languages.ko = "한국어 / Korean"
languages.zh = "中文 / Chinese"

-- note: the text strings are all Google translate and not to be used in real projects :)

local function is_editor()
	local sys_info = sys.get_sys_info()
	if not (sys_info.system_name == "Windows" or sys_info.system_name == "Darwin" or sys_info.system_name == "Linux") then
		return false
	end

	if files.isdir("bundle_resources") then
		return true
	else
		return false
	end
end

local function build_locale_table(csv)
	if csv ~= nil then
		local locale_table = {}
		for k,v in ipairs(csv[1]) do
			if k > 2 then -- skip key and reference cells
				locale_table[v] = {}
				for kk, vv in ipairs(csv) do
					if kk > 1 then -- skip frozen row
						local game_key = vv[1]
						local lang_value = vv[k]
						locale_table[v][game_key] = lang_value
					end
				end
			end
		end
		return locale_table
	end	
end

function init(self)
	local csv = csvloader.load_resource("/custom_resources/game_locale.csv")
	--pprint(csv)
	local locale = build_locale_table(csv)
	--pprint(locale)

	local path = sys.get_application_path().."/res/game_locale.csv"

	if is_editor() then
		--path = directories.path_for_file("../../bundle_resources/common/res/game_locale.csv")
		path = "./bundle_resources/common/res/game_locale.csv"
	end

	--print(path)
	local csv2 = csvloader.load_file(path)
	--pprint(csv2)
	local locale2 = build_locale_table(csv2)
	pprint(locale2)
	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
